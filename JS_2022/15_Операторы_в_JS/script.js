"use strict";

/*
Операторы в JS
*/
/*
Инкременты и декременты
*/
/*
Инкремент ("++")- это унарные операции, которые увеличивают 
записанное в переменную число на единицу
*/
/*
Декремент ("--")- это унарные операции, которые уменьшают записанное в переменную число на единицу
*/
// let incr = 10;
// let decr = 10;

// incr++;
// decr--;

// console.log(incr); //11
// console.log(decr); //9

/*
Если операторы расположены перед значением, это называется "префиксной" формой, если после- "постфиксной"
*/
// ++incr; //Prefix
// incr++; //postfix

/*
Если мы сразу используем инкремент или декримент в постфиксной форме, 
в таком случае постфиксная форма сначала возвращает старое значение (10), 
оно попадает в консоль и после этого инкремент или декримент изменяет значение.
*/
let incr = 10;
let decr = 10;

console.log(incr++); //10
console.log(decr--); //10

/*
оператор "%"- возвращает остаток от деления 2-х чисел
*/
console.log(5 % 2); // 1

/*
"==" и "===" операторы сравнения;
*/
// "=="- оператор не строго сравнения, не берет в расчет какой это тип данных, строка или число
console.log(2 * 4 == '8'); //true

// "==="- оператор строгого сравнения, учитывает какой тип данных сравнивается
console.log(2 * 4 === '8'); //false
console.log(2 * 4 === 8); //true

/*
"&&"- Оператор "И", "||"- оператор "или"
*/

// Оператор "&&" работает когда только 2 или больше значений являются правдивыми выражениями
// const isChecked = true;
// const isClose = true;

// console.log(isChecked && isClose); //true (оба выражения верны)

// "||" работает когда хотя бы один из вариантов правдивый
// const isChecked = true;
// const isClose = false;

// console.log(isChecked || isClose); //true (одно из выражений верно)

/*
"!"- оператор отрицания
*/
// "!"- Возвращает значение в обратное. Если было true, то обращает в false и наоборот
const isChecked = true;
const isClose = false;

console.log(isChecked || !isClose); //true

/*
Порядок выполнения операторов
*/
// В примере ниже у оператора умножения приоритет выше, чем у оператора сравнения, это стоит учитывать.
// Для лучшего понимания приоритетности есть таблица операторов (ссылка в полезных ссылках).
console.log(2 + 2 * 2 === 8); //false

/*
"!="- оператор неравенства
*/
//Буквально означает, что одно значение не равно другому, например в коде ниже 6 не равно 8. 
//Так же есть строгое "!==" и не строгое "!=" сравнеение по типам.
console.log(2 + 2 * 2 != '8'); //true (6 не равно 8)


